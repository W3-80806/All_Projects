

create database bloodbank;
use bloodbank;


--------------------------------------------------------Users--------------------------------------------------------------

CREATE TABLE users
(
U_Id INT PRIMARY KEY AUTO_INCREMENT,
First_Name VARCHAR(25),
Last_Name VARCHAR(25),
Email VARCHAR(40) UNIQUE,
Mobile CHAR(10),
Password VARCHAR(50),
Address VARCHAR(50),
Role VARCHAR(10) DEFAULT 'user'
);
  
INSERT INTO users VALUES(default,'John', 'Elliot','John@gmail.com','9634234165','John@123','Pune','admin');    
INSERT INTO users VALUES(default, 'Sakshi', 'Jadhav','Sakshi@gmail.com','9421376453','Sakshi@123','Pune',default);   //2   

INSERT INTO users VALUES(default, 'Shamal', 'Ramavat','Shamal@gmail.com','8342236487','Shamal@123','Pune',default);     

INSERT INTO users VALUES(default, 'Mansi', 'Kotgire','Mansi@gmail.com','9532996725','Mansi@123','Hinjewadi',default);  

INSERT INTO users VALUES(default, 'Pooja', 'Kote','Pooja@gmail.com','7645342675','Pooja@123','Hinjewadi',default);     

INSERT INTO users VALUES(default, 'Shubham', 'Yadav','Shubham@gmail.com','9634231698','Shubham@123','Wakad',default);       


select Email,Mobile,Address from users where Role like 'admin';


alter table users add Token varchar(100);

-------------------------------------------------------Hospital-------------------------------------------------------

CREATE TABLE hospitals
(
H_Id INT PRIMARY KEY AUTO_INCREMENT,
Hospital_Name VARCHAR(50),
Hospital_Number CHAR(15),
Hospital_Email VARCHAR(100),
Hospital_Address VARCHAR(150)
);


INSERT INTO hospitals VALUES(default, 'Ruby Hall Clinic','020 6645 5100','hinjawadi@rubyhall.com','Rajeev Gandhi Infotech Park, MIDC. Phase No 1, Plot No P-33, Hinjawadi, Pune â€“ 411057. Maharashtra'); 

INSERT INTO hospitals VALUES(default, 'MJM HOSPITAL','91 8530310999','info@mjmhospital.com','MJM HOSPITAL 1194/23 Janardan Sadan,Ghole Road, Pune - 411005.');  

INSERT INTO hospitals VALUES(default, 'Jehangir Hospital','020 6681 9999','info@jehangirhospital.com','32, Sasoon Rd, opposite Railway Station, Central Excise Colony, Sangamvadi, Pune, Maharashtra 411001');  

INSERT INTO hospitals VALUES(default, ' DPU Hospital','912027805100','info@dpuhospital.com',' Sant Tukaram Nagar,Pimpri,Pune-411018,Maharashtra,Pune');  


select users.First_Name,users.Last_Manager,users.Email,users.Mobile,patients.Blood_Type,patients.Hospital_Reciept,patients.Hospital_Address,patients.Quantity,patients.Age,patients.Gender from users,patients
where users.U_Id=patients.User_Id;
------------------------------------------------------Doners------------------------------------------------------------

CREATE TABLE doners
(
D_Id INT PRIMARY KEY AUTO_INCREMENT,
Blood_Type VARCHAR(10),
Hospital_Reciept VARCHAR(250) DEFAULT 'Null',
Age INT ,
Gender VARCHAR(15),
H_Id INT,
U_Id INT,
Action VARCHAR(100) DEFAULT 'Thank You for Your Request We will Late You Know If You Are Able For Donate Blood or Not',
Role VARCHAR(20) DEFAULT 'doner',
FOREIGN KEY(H_Id) REFERENCES hospitals(H_Id),
FOREIGN KEY(U_Id) REFERENCES users(U_Id)
);

INSERT INTO doners VALUES(default, 'O+',default,26,'Male',2,6,default,default);       
INSERT INTO doners VALUES(default, 'A-',default,26,'Female,2,4,default,default);     
INSERT INTO doners VALUES(default, 'AB+',default,23,'Female',1,4,default,default);  
INSERT INTO doners VALUES(default, 'A+',default,32,'Female',4,4,default,default);


select doners.D_Id,users.First_Name,users.Last_Name,users.Email,users.Mobile,doners.Blood_Type,doners.Hospital_Reciept,doners.Age,doners.Gender,doners.Action,doners.Role,hospitals.Hospital_Name,
hospitals.Hospital_Address,hospitals.Hospital_Number from users,doners,hospitals
where users.U_Id=doners.U_Id and hospitals.H_Id=doners.H_Id;


insert into doners(Blood_Type,Hospital_Reciept,Age,Gender) values('A+',default, '40','male') where H_Id=3 and U_Id=6;

alter table doners add Register_Date varchar(50);

-----------------------------------------------------Bloodbank-------------------------------------------------------------

CREATE TABLE bloodbank
(
B_Id INT PRIMARY KEY AUTO_INCREMENT,
D_Id INT,
H_Id INT,
U_Id INT,
FOREIGN KEY(H_Id) REFERENCES hospitals(H_Id),
FOREIGN KEY(D_Id) REFERENCES doners(D_Id),
FOREIGN KEY(U_Id) REFERENCES users(U_Id)
);


        select doners.D_Id,doners.Register_Date,users.First_Name,users.Last_Name,users.Email,users.Mobile,doners.Blood_Type,doners.Hospital_Reciept,doners.Age,doners.Gender,hospitals.Hospital_Name, hospitals.Hospital_Number,doners.Action from users,doners,hospitals where users.U_Id=doners.U_Id and hospitals.H_Id=doners.H_Id and doners.Action="Accepted";


select hospitals.Hospital_Name,users.First_Name,users.Last_Name,doners.Register_Date,doners.Action from users,doners,hospitals
where users.U_Id=bloodbank.U_Id and doners.D_Id=bloodbank.D_Id and hospitals.H_Id=bloodbank.H_Id and ;


select bloodbank.B_Id,doners.Blood_Type,hospitals.Hospital_Name,hospitals.Hospital_Address ,hospitals.Hospital_Number,users.First_Name,users.Last_Name from bloodbank,doners,hospitals,users where doners.D_Id=bloodbank.D_Id and hospitals.H_Id=bloodbank.H_Id and users.U_Id=bloodbank.U_Id ;




select doners.Blood_Type where doners.D_Id=bloodbank.D_Id and hospitals.H_Id=bloodbank.H_Id and users.U_Id=bloodbank.U_Id and H_Id=3;



select  hospitals.Hospital_Name,
hospitals.Hospital_Address,hospitals.Hospital_Number,doners.Blood_Type,doners.Hospital_Reciept,doners.Age,doners.Gender from doners,hospitals
where hospitals.H_Id=doners.H_Id and hospitals.Hospital_Name='DPU Hospital' and doners.Blood_Type='A+';



select doners.Register_Date,hospitals.Hospital_Name,users.First_Name,users.Last_Name,doners.Action from users,doners,hospitals where users.U_Id=doners.U_Id and hospitals.H_Id=doners.H_Id and doners.action = 'Thank You for Your Request We will Late You Know If You Are Able For Donate Blood or Not' and doners.U_Id=7;







---------------------contact.js------------------------------

import React from "react";
import Layout from "./../components/Layout/Layout";
import HomeIcon from '@mui/icons-material/Home';
import MailIcon from "@mui/icons-material/Mail";
import CallIcon from "@mui/icons-material/Call";
import { useEffect, useState } from 'react';
import axios from "axios";
import {
  Box,
  Paper,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Typography,
} from "@mui/material";

const Contact = () => {
  const [admins,setadmins] =useState([]);
  const [admin,setadmin] =useState( {Email :"",Mobile:"",Address:""});

  useEffect(()=>{
      GetAll();
  }, [])
 
  const GetAll=()=>
  {
      axios.get("http://127.0.0.1:9898/admincontactus")
      .then(response =>{
          // console.log(response.data);
          setadmins(response.data)
      })
      .catch(err =>{
          console.log(err);
      })
      console.log(admins);
      setadmin(...admins);
      console.log(admin);
       console.log(admin.Address);
  }
  return (
    <Layout>
      <Box sx={{ my: 5, ml: 10, "& h4": { fontWeight: "bold", mb: 2 } }}>
        
  
      </Box>
      <Box
        sx={{
          m: 3,
          width: "600px",
          ml: 10,
          "@media (max-width:600px)": {
            width: "300px",
          },
        }}
      >
        <TableContainer component={Paper}>
          <Table aria-label="contact table">
            <TableHead>
              <TableRow>
                <TableCell
                  sx={{ bgcolor: "black", color: "white" }}
                  align="center"
                >
                  Contact Details
                </TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              <TableRow>
                <TableCell>
                  <HomeIcon sx={{ color: "red", pt: 1 }} />{admin.Address}
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell>
                  <MailIcon sx={{ color: "skyblue", pt: 1 }} />{admin.Email}
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell>
                  <CallIcon sx={{ color: "green", pt: 1 }} /> {admin.Mobile}
                </TableCell>
              </TableRow>
            </TableBody>
          </Table>
        </TableContainer>
      </Box>
    </Layout>
  );
};

export default Contact;


---------------------
app.use((request, response, next)=>{
//Common code for checking token

    if(!request.url.includes('login'))
    {
             console.log(request.headers.authorization);
             //This means if call is received for /profile and /shopping
            if(request.headers.authorization!=undefined)
            {
                //Get the token & email from authorization header
                 console.log(request.headers.authorization);
                 var base64String = request.headers.authorization.split(' ')[1];

                 var utf8String = atob(base64String);

                 console.log(utf8String);

                 var tokenDetailsFromClient = JSON.parse(utf8String); 

                 console.log(tokenDetailsFromClient);

                 console.log("Email received from client is: ")
                 console.log(tokenDetailsFromClient.Email);

                console.log("Token received from client is: ")
                console.log(tokenDetailsFromClient.Token);

                //compare token and Email against db
                var connection = mysql.createConnection(connectionDetails);

                var statement  = `select count(*) as count from users where Email = '${tokenDetailsFromClient.Email}' and Token = '${tokenDetailsFromClient.Token}'`;

                console.log(statement);

                connection.query(statement, (error, result)=>{
                 if(error==null)
                 {
                       if(result[0].count > 0)
                       {
                          //We received a fact that user is logged in
                            connection.end();
                            next();
                       }
                       else
                        {
                            //We received a fact that user is yet to log in
                            let  reply = {message : "Please Login."}
                            response.setHeader("Content-Type", "application/json");
                            response.write(JSON.stringify(reply));
                            connection.end();
                            response.end();
                       }
                 }
                 else
                 {
                        response.setHeader("Content-Type", "application/json");
                        response.write(JSON.stringify(error));
                        connection.end();
                        response.end();
                }
           })
        }
        else
        {
            let  reply = {message : "Please Login."}
            response.setHeader("Content-Type", "application/json");
            response.write(JSON.stringify(reply));
            response.end();
        }

    }
    else
    {
       next();
    }

})


