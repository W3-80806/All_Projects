{"ast":null,"code":"var _jsxFileName = \"/home/sunbeam/userclientpage/src/services/DonerList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DonerList() {\n  _s();\n  const [receivedData, setReceivedData] = useState(null);\n  const [HospitalName, setHospitalName] = useState('');\n  const [BloodType, setBloodType] = useState('');\n  const [doner, setdoner] = useState({\n    Hospital_Name: \"\",\n    Hospital_Address: \"\",\n    Hospital_Number: \"\",\n    Blood_Type: \"\",\n    Hospital_Reciept: \"\",\n    Age: \"\",\n    Gender: \"\"\n  });\n  useEffect(() => {\n    // Extract data from URL parameters\n    const urlParams = new URLSearchParams(window.location.search);\n    const receivedData = {};\n    for (const [key, value] of urlParams.entries()) {\n      receivedData[key] = value;\n    }\n    setReceivedData(receivedData);\n    console.log(receivedData.Hospital_Name);\n    setHospitalName(receivedData.HospitalName);\n    console.log(\"Hospital_Name:\", HospitalName);\n    //console.log(receivedData.Blood_Type);\n    setBloodType(receivedData.BloodType);\n    console.log(\"Blood_Type:\", BloodType);\n    getAll();\n  }, []);\n  const getAll = () => {\n    const updatedProfile = {\n      Hospital_Name,\n      Blood_Type\n      // Add more fields as needed\n    };\n    axios.get('http://127.0.0.1:9898/bloodbank', updatedProfile).then(response => {\n      // Handle successful registration\n      console.log('Registration successful:', response.data);\n      setdoner(response.data);\n    }).catch(error => {\n      // Handle registration error\n      console.error('Registration failed:', error);\n    });\n  };\n  const styles = {\n    container: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      background: \"linear-gradient(rgba(255, 0, 0, 0.6), rgba(255, 255, 255, 0.9))\"\n    },\n    card: {\n      width: \"1000px\",\n      maxWidth: \"1200px\"\n    },\n    heading: {\n      textAlign: \"center\",\n      marginBottom: \"20px\"\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <div style={styles.container}>\n    //   <div className=\"card p-4\" style={styles.card}>\n    //     <h1 className=\"mb-4\" style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\n    //       Hospital List\n    //     </h1>\n    //     {/* Heading indicating clickability */}\n    //     <h2 style={styles.heading}>Click on a hospital to register</h2>\n    //     <Table striped bordered hover>\n    //       <thead>\n    //         <tr><th style={{textAlign: \"center\"}}>Hospital Name</th></tr>\n    //       </thead>\n    //       <tbody>\n    //         {hospitalData.map((hospital) => (\n    //           <tr\n    //             key={hospital.H_Id}\n    //             onClick={() => handleHospitalClick(hospital.H_Id)} \n    //             style={{ cursor: \"pointer\" }}\n    //           >\n    //             {/* <td className=\"font-weight-bold\">\n    //               Hospital Name <br />\n    //               <br />\n    //             </td> */}\n    //             <td style={{textAlign: \"center\"}}>{hospital.Hospital_Name}</td>\n    //             {/* <td>{hospital.Hospital_Name}</td> */}\n    //           </tr>\n    //         ))}\n    //       </tbody>\n    //     </Table>\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      children: \"DonerList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(DonerList, \"y/f5vFEN2lWVk6mLD1L3OtrJN54=\");\n_c = DonerList;\nexport default DonerList;\nvar _c;\n$RefreshReg$(_c, \"DonerList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DonerList","_s","receivedData","setReceivedData","HospitalName","setHospitalName","BloodType","setBloodType","doner","setdoner","Hospital_Name","Hospital_Address","Hospital_Number","Blood_Type","Hospital_Reciept","Age","Gender","urlParams","URLSearchParams","window","location","search","key","value","entries","console","log","getAll","updatedProfile","get","then","response","data","catch","error","styles","container","display","justifyContent","alignItems","minHeight","background","card","width","maxWidth","heading","textAlign","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sunbeam/userclientpage/src/services/DonerList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\n\nfunction DonerList() {\n    const [receivedData, setReceivedData] = useState(null);\n    const [HospitalName, setHospitalName] = useState('');\n    const [BloodType, setBloodType] = useState('');\n    const [doner,setdoner]=useState({Hospital_Name:\"\",Hospital_Address:\"\",Hospital_Number:\"\",Blood_Type:\"\",Hospital_Reciept:\"\",Age:\"\",Gender:\"\"})\n    useEffect(() => {\n      // Extract data from URL parameters\n      const urlParams = new URLSearchParams(window.location.search);\n      const receivedData = {};\n      for (const [key, value] of urlParams.entries()) {\n        receivedData[key] = value;\n      }\n      setReceivedData(receivedData);\n      console.log(receivedData.Hospital_Name);\n      setHospitalName(receivedData.HospitalName);\n      console.log(\"Hospital_Name:\",HospitalName);\n      //console.log(receivedData.Blood_Type);\n      setBloodType(receivedData.BloodType);\n      console.log(\"Blood_Type:\",BloodType);\n\n      getAll();\n    }, []);\n\n    const getAll = () => {\n        const updatedProfile = {\n            Hospital_Name,\n            Blood_Type\n            // Add more fields as needed\n          };\n        axios.get('http://127.0.0.1:9898/bloodbank',updatedProfile)\n            .then(response => {\n                // Handle successful registration\n                console.log('Registration successful:', response.data);\n                setdoner(response.data);\n            })\n            .catch(error => {\n                // Handle registration error\n                console.error('Registration failed:', error);\n            });\n    };\n\n  const styles = {\n    container: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      background: \"linear-gradient(rgba(255, 0, 0, 0.6), rgba(255, 255, 255, 0.9))\",\n    },\n    card: {\n      width: \"1000px\",\n      maxWidth: \"1200px\",\n    },\n    heading: {\n      textAlign: \"center\",\n      marginBottom: \"20px\",\n    },\n  };\n\n  return (\n    // <div style={styles.container}>\n    //   <div className=\"card p-4\" style={styles.card}>\n    //     <h1 className=\"mb-4\" style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\n    //       Hospital List\n    //     </h1>\n\n    //     {/* Heading indicating clickability */}\n    //     <h2 style={styles.heading}>Click on a hospital to register</h2>\n\n    //     <Table striped bordered hover>\n    //       <thead>\n    //         <tr><th style={{textAlign: \"center\"}}>Hospital Name</th></tr>\n    //       </thead>\n    //       <tbody>\n    //         {hospitalData.map((hospital) => (\n    //           <tr\n    //             key={hospital.H_Id}\n    //             onClick={() => handleHospitalClick(hospital.H_Id)} \n    //             style={{ cursor: \"pointer\" }}\n    //           >\n    //             {/* <td className=\"font-weight-bold\">\n    //               Hospital Name <br />\n    //               <br />\n    //             </td> */}\n    //             <td style={{textAlign: \"center\"}}>{hospital.Hospital_Name}</td>\n    //             {/* <td>{hospital.Hospital_Name}</td> */}\n    //           </tr>\n    //         ))}\n    //       </tbody>\n    //     </Table>\n    //   </div>\n    // </div>\n    <div>DonerList</div>\n  );\n}\n\nexport default DonerList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}