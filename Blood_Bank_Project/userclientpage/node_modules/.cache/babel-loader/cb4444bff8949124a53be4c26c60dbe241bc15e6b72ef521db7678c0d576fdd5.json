{"ast":null,"code":"var _jsxFileName = \"/home/sunbeam/userclientpage/src/services/DonerList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DonerList() {\n  _s();\n  const [receivedData, setReceivedData] = useState({\n    Hospital_Name: '',\n    Blood_Type: ''\n  });\n  useEffect(() => {\n    // Extract data from URL parameters\n    const urlParams = new URLSearchParams(window.location.search);\n    const receivedData = {};\n    for (const [key, value] of urlParams.entries()) {\n      receivedData[key] = value;\n    }\n    setReceivedData(receivedData);\n    getAll();\n  }, []);\n  getAll(() => {\n    // Fetch data from the database using Axios\n    axios.get(\"http://127.0.0.1:9898/hospitals\").then(response => {\n      // Set the fetched data to the state\n      setdoner(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching hospital data:\", error);\n    });\n  }, []);\n  const handleHospitalClick = hospitalId => {\n    // Redirect to the hospital registration page with the hospitalId\n    window.location.href = `/hregister/${hospitalId}`;\n  };\n  const styles = {\n    container: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      background: \"linear-gradient(rgba(255, 0, 0, 0.6), rgba(255, 255, 255, 0.9))\"\n    },\n    card: {\n      width: \"1000px\",\n      maxWidth: \"1200px\"\n    },\n    heading: {\n      textAlign: \"center\",\n      marginBottom: \"20px\"\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <div style={styles.container}>\n    //   <div className=\"card p-4\" style={styles.card}>\n    //     <h1 className=\"mb-4\" style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\n    //       Hospital List\n    //     </h1>\n    //     {/* Heading indicating clickability */}\n    //     <h2 style={styles.heading}>Click on a hospital to register</h2>\n    //     <Table striped bordered hover>\n    //       <thead>\n    //         <tr><th style={{textAlign: \"center\"}}>Hospital Name</th></tr>\n    //       </thead>\n    //       <tbody>\n    //         {hospitalData.map((hospital) => (\n    //           <tr\n    //             key={hospital.H_Id}\n    //             onClick={() => handleHospitalClick(hospital.H_Id)} \n    //             style={{ cursor: \"pointer\" }}\n    //           >\n    //             {/* <td className=\"font-weight-bold\">\n    //               Hospital Name <br />\n    //               <br />\n    //             </td> */}\n    //             <td style={{textAlign: \"center\"}}>{hospital.Hospital_Name}</td>\n    //             {/* <td>{hospital.Hospital_Name}</td> */}\n    //           </tr>\n    //         ))}\n    //       </tbody>\n    //     </Table>\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      children: \"DonerList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(DonerList, \"uXTwoAdT0Jz8KZfXL6pTBXKS5u0=\");\n_c = DonerList;\nexport default DonerList;\nvar _c;\n$RefreshReg$(_c, \"DonerList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DonerList","_s","receivedData","setReceivedData","Hospital_Name","Blood_Type","urlParams","URLSearchParams","window","location","search","key","value","entries","getAll","get","then","response","setdoner","data","catch","error","console","handleHospitalClick","hospitalId","href","styles","container","display","justifyContent","alignItems","minHeight","background","card","width","maxWidth","heading","textAlign","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sunbeam/userclientpage/src/services/DonerList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\n\nfunction DonerList() {\n    const [receivedData, setReceivedData] = useState( { Hospital_Name: '',\n    Blood_Type: ''});\n\n    useEffect(() => {\n      // Extract data from URL parameters\n      const urlParams = new URLSearchParams(window.location.search);\n      const receivedData = {};\n      for (const [key, value] of urlParams.entries()) {\n        receivedData[key] = value;\n      }\n      setReceivedData(receivedData);\n      getAll();\n    }, []);\n\n  getAll(() => {\n    // Fetch data from the database using Axios\n    axios\n      .get(\"http://127.0.0.1:9898/hospitals\")\n      .then((response) => {\n        // Set the fetched data to the state\n        setdoner(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching hospital data:\", error);\n      });\n  }, []);\n\n  const handleHospitalClick = (hospitalId) => {\n    // Redirect to the hospital registration page with the hospitalId\n    window.location.href = `/hregister/${hospitalId}`;\n};\n\n\n  const styles = {\n    container: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      background: \"linear-gradient(rgba(255, 0, 0, 0.6), rgba(255, 255, 255, 0.9))\",\n    },\n    card: {\n      width: \"1000px\",\n      maxWidth: \"1200px\",\n    },\n    heading: {\n      textAlign: \"center\",\n      marginBottom: \"20px\",\n    },\n  };\n\n  return (\n    // <div style={styles.container}>\n    //   <div className=\"card p-4\" style={styles.card}>\n    //     <h1 className=\"mb-4\" style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\n    //       Hospital List\n    //     </h1>\n\n    //     {/* Heading indicating clickability */}\n    //     <h2 style={styles.heading}>Click on a hospital to register</h2>\n\n    //     <Table striped bordered hover>\n    //       <thead>\n    //         <tr><th style={{textAlign: \"center\"}}>Hospital Name</th></tr>\n    //       </thead>\n    //       <tbody>\n    //         {hospitalData.map((hospital) => (\n    //           <tr\n    //             key={hospital.H_Id}\n    //             onClick={() => handleHospitalClick(hospital.H_Id)} \n    //             style={{ cursor: \"pointer\" }}\n    //           >\n    //             {/* <td className=\"font-weight-bold\">\n    //               Hospital Name <br />\n    //               <br />\n    //             </td> */}\n    //             <td style={{textAlign: \"center\"}}>{hospital.Hospital_Name}</td>\n    //             {/* <td>{hospital.Hospital_Name}</td> */}\n    //           </tr>\n    //         ))}\n    //       </tbody>\n    //     </Table>\n    //   </div>\n    // </div>\n    <div>DonerList</div>\n  );\n}\n\nexport default DonerList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAE;IAAES,aAAa,EAAE,EAAE;IACrEC,UAAU,EAAE;EAAE,CAAC,CAAC;EAEhBT,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC7D,MAAMR,YAAY,GAAG,CAAC,CAAC;IACvB,KAAK,MAAM,CAACS,GAAG,EAAEC,KAAK,CAAC,IAAIN,SAAS,CAACO,OAAO,CAAC,CAAC,EAAE;MAC9CX,YAAY,CAACS,GAAG,CAAC,GAAGC,KAAK;IAC3B;IACAT,eAAe,CAACD,YAAY,CAAC;IAC7BY,MAAM,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAERA,MAAM,CAAC,MAAM;IACX;IACAjB,KAAK,CACFkB,GAAG,CAAC,iCAAiC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAC,QAAQ,CAACD,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,mBAAmB,GAAIC,UAAU,IAAK;IAC1C;IACAhB,MAAM,CAACC,QAAQ,CAACgB,IAAI,GAAI,cAAaD,UAAW,EAAC;EACrD,CAAC;EAGC,MAAME,MAAM,GAAG;IACbC,SAAS,EAAE;MACTC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,SAAS,EAAE,OAAO;MAClBC,UAAU,EAAE;IACd,CAAC;IACDC,IAAI,EAAE;MACJC,KAAK,EAAE,QAAQ;MACfC,QAAQ,EAAE;IACZ,CAAC;IACDC,OAAO,EAAE;MACPC,SAAS,EAAE,QAAQ;MACnBC,YAAY,EAAE;IAChB;EACF,CAAC;EAED;IAAA;IACE;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAvC,OAAA;MAAAwC,QAAA,EAAK;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;AAExB;AAAC1C,EAAA,CAvFQD,SAAS;AAAA4C,EAAA,GAAT5C,SAAS;AAyFlB,eAAeA,SAAS;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}